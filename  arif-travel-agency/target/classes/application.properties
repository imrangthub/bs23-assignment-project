
# ===============================
# = Server Properties
# ===============================
server.port= 8080

# ===============================
# = PostGre | DATA SOURCE 
# ===============================

spring.jpa.database=POSTGRESQL
spring.datasource.url=jdbc:postgresql://localhost:5432/arif_travel_agencydb
spring.datasource.username=postgres
spring.datasource.password=123456
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# disable driver's feature detection
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
# without detection you have to set the dialect by hand
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# ===============================
# = MYSQL | DATA SOURCE 
# ===============================
# Docker Container Config
#spring.datasource.url=jdbc:mysql://arif_travel_agencydb:3333/arif_travel_agencydb?createDatabaseIfNotExist=true

#spring.datasource.url=jdbc:mysql://localhost:3306/arif_travel_agencydb?createDatabaseIfNotExist=true
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.username= root
#spring.datasource.password= root
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# ===============================
# = JPA  | HIBERNATE
# ===============================
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
# Showing sql Query 
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
# The SQL dialect makes Hibernate generate better SQL for the chosen database



